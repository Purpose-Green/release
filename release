#!/bin/bash
set -euo pipefail

# shellcheck disable=SC2034
declare -r RELEASE_VERSION="0.4.1"

RELEASE_ROOT_DIR="$(dirname "${BASH_SOURCE[0]}")"
export RELEASE_ROOT_DIR

source "$RELEASE_ROOT_DIR/src/dev/dumper.sh"
source "$RELEASE_ROOT_DIR/src/colors.sh"
source "$RELEASE_ROOT_DIR/src/compare.sh"
source "$RELEASE_ROOT_DIR/src/console_header.sh"
source "$RELEASE_ROOT_DIR/src/env_configuration.sh"
source "$RELEASE_ROOT_DIR/src/io.sh"
source "$RELEASE_ROOT_DIR/src/release.sh"
source "$RELEASE_ROOT_DIR/src/validate.sh"
source "$RELEASE_ROOT_DIR/src/slack.sh"
source "$RELEASE_ROOT_DIR/src/json.sh"
source "$RELEASE_ROOT_DIR/src/main.sh"

# Check if at least one argument (branch name) is passed
if [ $# -lt 1 ]; then
  console_header::print_help
  exit 1
fi

SOURCE_BRANCH=${1:-SOURCE_BRANCH:-"main"}
TARGET_BRANCH=${TARGET_BRANCH:-"prod"}
DEVELOPMENT_BRANCH=${DEVELOPMENT_BRANCH:-"main"}
RELEASE_SUCCESSFUL_TEXT=${RELEASE_SUCCESSFUL_TEXT:-}
DRY_RUN=${DRY_RUN:-false}
FORCE_DEPLOY=false

while [[ $# -gt 0 ]]; do
  argument="$1"
  case $argument in
    --debug)
      set -x
      ;;
    -d|--dry-run)
      DRY_RUN=true
      ;;
    -f|--force)
      FORCE_DEPLOY=true
      ;;
    -h|--help)
      console_header::print_help
      exit 0
      ;;
    -v|--version)
      console_header::print_version
      exit 0
      ;;
    --source)
      SOURCE_BRANCH="$2"
      shift
      ;;
    --target)
      TARGET_BRANCH="$2"
      shift
      ;;
    --develop)
      DEVELOPMENT_BRANCH="$2"
      shift
      ;;
  esac
  shift
done

GH_CLI_INSTALLED=false
if command -v gh &> /dev/null; then
    GH_CLI_INSTALLED=true
fi

export GH_CLI_INSTALLED
export DRY_RUN

main::action "$SOURCE_BRANCH" \
  "$TARGET_BRANCH" \
  "$DEVELOPMENT_BRANCH" \
  "$FORCE_DEPLOY"

echo -e "${COLOR_GREEN}Script completed${COLOR_RESET}"
if [ -n "$RELEASE_SUCCESSFUL_TEXT" ]; then
  echo -e "$RELEASE_SUCCESSFUL_TEXT"
fi
