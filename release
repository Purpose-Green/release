#!/bin/bash
set -euo pipefail

# shellcheck disable=SC2034
declare -r RELEASE_VERSION="0.7.0"

RELEASE_ROOT_DIR="$(dirname "${BASH_SOURCE[0]}")"
export RELEASE_ROOT_DIR

[ -f "$RELEASE_ROOT_DIR/src/dev/dumper.sh" ] && source "$RELEASE_ROOT_DIR/src/dev/dumper.sh"
source "$RELEASE_ROOT_DIR/src/colors.sh"
source "$RELEASE_ROOT_DIR/src/compare.sh"
source "$RELEASE_ROOT_DIR/src/console_header.sh"
source "$RELEASE_ROOT_DIR/src/env.sh"
source "$RELEASE_ROOT_DIR/src/git.sh"
source "$RELEASE_ROOT_DIR/src/io.sh"
source "$RELEASE_ROOT_DIR/src/release.sh"
source "$RELEASE_ROOT_DIR/src/validate.sh"
source "$RELEASE_ROOT_DIR/src/slack.sh"
source "$RELEASE_ROOT_DIR/src/json.sh"
source "$RELEASE_ROOT_DIR/src/main.sh"

DRY_RUN=false
FORCE_DEPLOY=false
GH_CLI_INSTALLED=false

while [[ $# -gt 0 ]]; do
  argument="$1"
  case $argument in
    --debug)
      set -x
      ;;
    -d|--dry-run)
      DRY_RUN=true
      ;;
    -f|--force)
      FORCE_DEPLOY=true
      ;;
    -h|--help)
      console_header::print_help
      exit 0
      ;;
    -e|--env)
      # shellcheck disable=SC1090
      source "$2"
      shift
      ;;
    -v|--version)
      console_header::print_version
      exit 0
      ;;
    --source)
      RELEASE_SOURCE_BRANCH="$2"
      shift
      ;;
    --target)
      RELEASE_TARGET_BRANCH="$2"
      shift
      ;;
    --develop)
      RELEASE_DEVELOPMENT_BRANCH="$2"
      shift
      ;;
    *)
      RELEASE_SOURCE_BRANCH=$argument
  esac
  shift
done

if command -v gh &> /dev/null; then
    GH_CLI_INSTALLED=true
fi

#######################################################

export DRY_RUN
export FORCE_DEPLOY
export GH_CLI_INSTALLED
export RELEASE_SOURCE_BRANCH
export RELEASE_TARGET_BRANCH
export RELEASE_DEVELOPMENT_BRANCH

main::action "$FORCE_DEPLOY"

echo -e "${COLOR_GREEN}Script completed${COLOR_RESET}"
env::render_successful_text
